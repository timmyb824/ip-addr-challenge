- name: Install Python3, pip, and NGINX
  ansible.builtin.apt:
    name: ['python3', 'python3-pip', 'nginx']
    state: present

- name: Check if app directory exists
  ansible.builtin.stat:
    path: '/home/{{ ansible_user }}/ip-addr/'
  register: dir_stat

- name: Copy app files if app directory does not exist
  ansible.builtin.copy:
    mode: '0644'
    src: "{{ playbook_dir }}/../../"
    dest: '/home/{{ ansible_user }}/ip-addr/'
  when: not dir_stat.stat.exists

- name: Install python requirements
  ansible.builtin.pip:
    requirements: requirements.txt
    chdir: /home/{{ ansible_user }}/ip-addr/

- name: Copy systemd unit file
  ansible.builtin.template:
    src: 'templates/ip-addr.service.j2'
    dest: /etc/systemd/system/ip-addr.service
    owner: root
    group: root
    mode: '0644'

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: true

- name: Start ip-addr service
  ansible.builtin.systemd:
    name: ip-addr.service
    state: started
    enabled: true

- name: Copy NGINX configuration file
  ansible.builtin.template:
    src: templates/nginx.conf.j2
    dest: /etc/nginx/sites-available/ip-addr.conf
    mode: '0644'

- name: Enable NGINX configuration file
  ansible.builtin.file:
    src: /etc/nginx/sites-available/ip-addr.conf
    dest: /etc/nginx/sites-enabled/ip-addr.conf
    state: link

- name: Disable default NGINX configuration file
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: Test NGINX configuration
  ansible.builtin.command: nginx -t
  register: nginx_test
  ignore_errors: true

- name: Restart NGINX
  ansible.builtin.service:
    name: nginx
    state: restarted
  when: nginx_test.rc == 0
