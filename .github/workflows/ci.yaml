name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    environment:
      name: production
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v3

        - uses: actions/setup-python@v4
          with:
            python-version: "3.11"

        - run: python -m pip install --upgrade pip
          shell: bash

        - run: pip install -r requirements.txt
          shell: bash

        - run: |
            pip install pytest
            pytest -xv
          shell: bash


  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
        - uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.OCI_HOST }}
            username: ${{ secrets.OCI_USERNAME }}
            key: ${{ secrets.OCI_KEY }}
            passphrase: ${{ secrets.OCI_PASSPHRASE }}
            port: ${{ secrets.OCI_PORT }}
            script: |
              cd /home/ubuntu/ip-addr
              git pull
              pip install -r requirements.txt --no-warn-script-location
              sudo systemctl restart ip-addr.service


  dockerPublish:
    needs: build
    environment:
      name: production
    runs-on: ubuntu-latest
    steps:
      - name: pull git repo
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ip-addr-challenge:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
